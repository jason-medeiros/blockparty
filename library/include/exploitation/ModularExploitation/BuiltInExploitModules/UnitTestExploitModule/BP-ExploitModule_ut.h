#ifndef __BP_EXPLOIT_MODULE_UT_H
#define __BP_EXPLOIT_MODULE_UT_H

// create parameter structure
typedef struct __BP_EXPLOIT_MODULE_UT_PARAMS {

	// regular expression filter
	char *preg_target_filter;

} BP_EXPLOIT_MODULE_UT_PARAMS, *P_BP_EXPLOIT_MODULE_UT_PARAMS;


// create the exploit module within this routine.  By create, I mean generate the structure
// and fill out the non-auto pointers.
P_BP_EXPLOIT_MODULE BP_ExploitModule_ut();


// initialization routine
BP_ERROR_T BP_ExploitModule_ut_init(void *module);

// exploit load routine
BP_ERROR_T BP_ExploitModule_ut_load(void *module);

// exploit unload routine
BP_ERROR_T BP_ExploitModule_ut_unload(void *module);

// exploit retarget routine
BP_ERROR_T BP_ExploitModule_ut_retarget(void *module);

// target assessment routine
BP_ERROR_T BP_ExploitModule_ut_assess_target(void *module);

// exploit fire routine
BP_ERROR_T BP_ExploitModule_ut_fire(void *module);

// report exploitation result in the database
BP_ERROR_T BP_ExploitModule_ut_db_report(void *module);
#endif /* __BP_EXPLOIT_MODULE_UT_H */
