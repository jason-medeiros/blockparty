/*
 * BP-WebExploitationExploitRequestSets.h
 *
 *  Created on: Dec 10, 2011
 *      Author: root
 */

#ifndef BPWEBEXPLOITATIONEXPLOITREQUESTSETS_H_
#define BPWEBEXPLOITATIONEXPLOITREQUESTSETS_H_

typedef enum {
	BP_WEB_EXPLOITATION_REQSET_NOMSG,
	BP_WEB_EXPLOITATION_REQSET_WAS_INSERTED,
	BP_WEB_EXPLOITATION_REQSET_ALREADY_EXISTS_STATUS_IS_0,
	BP_WEB_EXPLOITATION_REQSET_ALREADY_EXISTS_STATUS_IS_SET
};

// generates an exploit request set from an anchor
P_BP_WEB_EXPLOIT_REQUEST_SET BP_GenWebExploitRequestSet(char *get_data, char *post_data);

// Run exploit request set.  Retry count the number of retries to
// retry a request in the case of a failedHTTPRequest.  If proxy subsystem
// is enabled, each retry will use a new proxy.
// BP_ERROR_T BP_RunWebExploitRequestSet(P_BP_WEB_ASSESSMENT assessment, P_BP_WEB_EXPLOIT_REQUEST_SET ers, size_t retry_count);

// Run exploit request set.  Retry count the number of retries to
// retry a request in the case of a failedHTTPRequest.  If proxy subsystem
// is enabled, each retry will use a new proxy.
BP_ERROR_T BP_RunWebExploitRequestSet(P_BP_WEB_ASSESSMENT assessment, P_BP_WEB_EXPLOIT_REQUEST_SET ers, size_t retry_count);

// Display exploit request set.
BP_ERROR_T BP_DisplayExploitRequestSet(P_BP_WEB_EXPLOIT_REQUEST_SET ers);

// generates an exploit request set from an anchor
BP_ERROR_T BP_DestroyWebExploitRequestSet(P_BP_WEB_EXPLOIT_REQUEST_SET ers);

// logs an exploit request set
size_t BP_LogWebExploitRequestSetInDB(P_BP_MYSQL_SESSION db_handle, P_BP_WEB_EXPLOIT_REQUEST_SET ers, size_t result_linking_id);

// runs a select query against a given id and checks for
// the current http status of the request.
size_t BP_WebExploitationRequestSetCheckHTTPStatusForDBID(P_BP_MYSQL_SESSION db_handle, size_t db_id);

// updates the database with http return/connect status set
size_t BP_WebExploitationRequestUpdateHTTPStatus(P_BP_MYSQL_SESSION db_handle, size_t record_id,  size_t http_status, size_t http_connect_status);


#endif /* BPWEBEXPLOITATIONEXPLOITREQUESTSETS_H_ */
