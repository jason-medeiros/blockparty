/*
 * BP-WebExploitJSPErrCodes.cc
 *
 *  Created on: Apr 7, 2009
 *      Author: root
 */

#include "../../../../include/BP-Main.h"

BP_JSP_ERR_CODES jspErrCodes[] = {
	{ (char*)"ArithmeticException"},
	{ (char*)"ArrayStoreException"},
	{ (char*)"BufferOverflowException"},
	{ (char*)"BufferUnderflowException"},
	{ (char*)"CannotRedoException"},
	{ (char*)"CannotUndoException"},
	{ (char*)"ClassCastException"},
	{ (char*)"CMMException"},
	{ (char*)"ConcurrentModificationException"},
	{ (char*)"DOMException"},
	{ (char*)"EmptyStackException"},
	{ (char*)"IllegalArgumentException"},
	{ (char*)"IllegalMonitorStateException"},
	{ (char*)"IllegalPathStateException"},
	{ (char*)"IllegalStateException"},
	{ (char*)"ImagingOpException"},
	{ (char*)"IndexOutOfBoundsException"},
	{ (char*)"MissingResourceException"},
	{ (char*)"NegativeArraySizeException"},
	{ (char*)"NoSuchElementException"},
	{ (char*)"NullPointerException"},
	{ (char*)"ProfileDataException"},
	{ (char*)"ProviderException"},
	{ (char*)"RasterFormatException"},
	{ (char*)"SecurityException"},
	{ (char*)"SystemException"},
	{ (char*)"UndeclaredThrowableException"},
	{ (char*)"UnmodifiableSetException"},
	{ (char*)"UnsupportedOperationException"},
	{ (char*)"java.lang.Exception"},
	{ (char*)"RuntimeException"},
	{ (char*)"AclNotFoundException"},
	{ (char*)"ActivationException"},
	{ (char*)"AlreadyBoundException"},
	{ (char*)"ApplicationException"},
	{ (char*)"AWTException"},
	{ (char*)"BackingStoreException"},
	{ (char*)"BadLocationException"},
	{ (char*)"CertificateException"},
	{ (char*)"ClassNotFoundException"},
	{ (char*)"CloneNotSupportedException"},
	{ (char*)"DataFormatException"},
	{ (char*)"DestroyFailedException"},
	{ (char*)"ExpandVetoException"},
	{ (char*)"FontFormatException"},
	{ (char*)"GeneralSecurityException"},
	{ (char*)"GSSException"},
	{ (char*)"IllegalAccessException"},
	{ (char*)"InstantiationException"},
	{ (char*)"InterruptedException"},
	{ (char*)"IntrospectionException"},
	{ (char*)"InvalidMidiDataException"},
	{ (char*)"InvalidPreferencesFormatException"},
	{ (char*)"InvocationTargetException"},
	{ (char*)"IOException"},
	{ (char*)"LastOwnerException"},
	{ (char*)"LineUnavailableException"},
	{ (char*)"MidiUnavailableException"},
	{ (char*)"MimeTypeParseException"},
	{ (char*)"NamingException"},
	{ (char*)"NoninvertibleTransformException"},
	{ (char*)"NoSuchFieldException"},
	{ (char*)"NoSuchMethodException"},
	{ (char*)"NotBoundException"},
	{ (char*)"NotOwnerException"},
	{ (char*)"ParseException"},
	{ (char*)"ParserConfigurationException"},
	{ (char*)"PrinterException"},
	{ (char*)"PrintException"},
	{ (char*)"PrivilegedActionException"},
	{ (char*)"PropertyVetoException"},
	{ (char*)"RefreshFailedException"},
	{ (char*)"RemarshalException"},
	{ (char*)"RuntimeException"},
	{ (char*)"SAXException"},
	{ (char*)"ServerNotActiveException"},
	{ (char*)"SQLException"},
	{ (char*)"TooManyListenersException"},
	{ (char*)"TransformerException"},
	{ (char*)"UnsupportedAudioFileException"},
	{ (char*)"UnsupportedCallbackException"},
	{ (char*)"UnsupportedFlavorException"},
	{ (char*)"UnsupportedLookAndFeelException"},
	{ (char*)"URISyntaxException"},
	{ (char*)"UserException"},
	{ (char*)"XAException"},
	{ (char*)"UnknownGroupException"},
	{ (char*)"UnknownObjectException"},
	{ (char*)"CertificateEncodingException"},
	{ (char*)"CertificateExpiredException"},
	{ (char*)"CertificateNotYetValidException"},
	{ (char*)"CertificateParsingException"},
	{ (char*)"ServerCloneException"},
	{ (char*)"BadPaddingException"},
	{ (char*)"CertificateException"},
	{ (char*)"CertPathBuilderException"},
	{ (char*)"CertPathValidatorException"},
	{ (char*)"CertStoreException"},
	{ (char*)"CRLException"},
	{ (char*)"DigestException"},
	{ (char*)"ExemptionMechanismException"},
	{ (char*)"IllegalBlockSizeException"},
	{ (char*)"InvalidAlgorithmParameterException"},
	{ (char*)"InvalidKeySpecException"},
	{ (char*)"InvalidParameterSpecException"},
	{ (char*)"KeyException"},
	{ (char*)"KeyStoreException"},
	{ (char*)"LoginException"},
	{ (char*)"NoSuchAlgorithmException"},
	{ (char*)"NoSuchPaddingException"},
	{ (char*)"NoSuchProviderException"},
	{ (char*)"ShortBufferException"},
	{ (char*)"SignatureException"},
	{ (char*)"UnrecoverableKeyException"},
	{ (char*)"ChangedCharSetException"},
	{ (char*)"CharacterCodingException"},
	{ (char*)"CharConversionException"},
	{ (char*)"ClosedChannelException"},
	{ (char*)"EOFException"},
	{ (char*)"FileLockInterruptionException"},
	{ (char*)"FileNotFoundException"},
	{ (char*)"IIOException"},
	{ (char*)"InterruptedIOException"},
	{ (char*)"MalformedURLException"},
	{ (char*)"ObjectStreamException"},
	{ (char*)"ProtocolException"},
	{ (char*)"RemoteException"},
	{ (char*)"SocketException"},
	{ (char*)"SSLException"},
	{ (char*)"SyncFailedException"},
	{ (char*)"UnknownHostException"},
	{ (char*)"UnknownServiceException"},
	{ (char*)"UnsupportedEncodingException"},
	{ (char*)"UTFDataFormatException"},
	{ (char*)"ZipException"},
	{ (char*)"AttributeInUseException"},
	{ (char*)"AttributeModificationException"},
	{ (char*)"CannotProceedException"},
	{ (char*)"CommunicationException"},
	{ (char*)"ConfigurationException"},
	{ (char*)"ContextNotEmptyException"},
	{ (char*)"InsufficientResourcesException"},
	{ (char*)"InterruptedNamingException"},
	{ (char*)"InvalidAttributeIdentifierException"},
	{ (char*)"InvalidAttributesException"},
	{ (char*)"InvalidAttributeValueException"},
	{ (char*)"InvalidNameException"},
	{ (char*)"InvalidSearchControlsException"},
	{ (char*)"InvalidSearchFilterException"},
	{ (char*)"LimitExceededException"},
	{ (char*)"LinkException"},
	{ (char*)"NameAlreadyBoundException"},
	{ (char*)"NameNotFoundException"},
	{ (char*)"NamingSecurityException"},
	{ (char*)"NoInitialContextException"},
	{ (char*)"NoSuchAttributeException"},
	{ (char*)"NotContextException"},
	{ (char*)"OperationNotSupportedException"},
	{ (char*)"PartialResultException"},
	{ (char*)"ReferralException"},
	{ (char*)"SchemaViolationException"},
	{ (char*)"ServiceUnavailableException"},
	{ (char*)"PrinterAbortException"},
	{ (char*)"PrinterIOException"},
	{ (char*)"SAXNotRecognizedException"},
	{ (char*)"SAXNotSupportedException"},
	{ (char*)"SAXParseException"},
	{ (char*)"BatchUpdateException"},
	{ (char*)"SQLWarning"},
	{ (char*)"TransformerConfigurationException"},
	{ (char*)"AdapterAlreadyExists"},
	{ (char*)"AdapterInactive"},
	{ (char*)"AdapterNonExistent"},
	{ (char*)"AlreadyBound"},
	{ (char*)"BadKind"},
	{ (char*)"CannotProceed"},
	{ (char*)"DuplicateName"},
	{ (char*)"FormatMismatch"},
	{ (char*)"ForwardRequest"},
	{ (char*)"ForwardRequest"},
	{ (char*)"InconsistentTypeCode"},
	{ (char*)"InconsistentTypeCode"},
	{ (char*)"InvalidAddress"},
	{ (char*)"InvalidName"},
	{ (char*)"InvalidPolicy"},
	{ (char*)"InvalidSeq"},
	{ (char*)"InvalidSlot"},
	{ (char*)"InvalidTypeForEncoding"},
	{ (char*)"InvalidValue"},
	{ (char*)"InvalidValue"},
	{ (char*)"NoContext"},
	{ (char*)"NoServant"},
	{ (char*)"NotEmpty"},
	{ (char*)"NotFound"},
	{ (char*)"ObjectAlreadyActive"},
	{ (char*)"ObjectNotActive"},
	{ (char*)"PolicyError"},
	{ (char*)"ServantAlreadyActive"},
	{ (char*)"ServantNotActive"},
	{ (char*)"TypeMismatch"},
	{ (char*)"TypeMismatch"},
	{ (char*)"TypeMismatch"},
	{ (char*)"UnknownEncoding"},
	{ (char*)"UnknownUserException"},
	{ (char*)"WrongAdapter"},
	{ (char*)"WrongPolicy"},
	{ (char*)"WrongTransaction"}
};


// Generates an allocated array of JSP error codes
P_BP_JSP_ERR_CODES BP_JSPGenErrCodeArray(){

	size_t retSize = sizeof(jspErrCodes);
	P_BP_JSP_ERR_CODES retTable = (P_BP_JSP_ERR_CODES) bpcalloc(retSize, 1);
	if(!retTable)
		return NULL;


	BP_JSP_ERR_CODES nullCmp;
	memset(&nullCmp, 0x00, sizeof(nullCmp));

	// duplicate the array
	size_t x = 0;
	for(x = 0; ( sizeof(BP_JSP_ERR_CODES) * x ) < sizeof(jspErrCodes); x++){

		// duplicate string in table
		retTable[x].description = bpstrdup(jspErrCodes[x].description);

	}

	return retTable;
}


// Generates a list of error code tests based around the
// error code array defined above.  This set is basically
// a string array w/o format strings.
P_BP_FMT_ERR_TESTS BP_JSPGenErrTestsFromErrCodeArray(P_BP_JSP_ERR_CODES inCodes, size_t numCodes, char **fmtReplacementTable){

	if(!inCodes)
		return NULL;

	size_t i = 0;
	P_BP_FMT_ERR_TESTS genSet = NULL;
	BP_FMT_ERR_TESTS * retSet = NULL;


	// set code array pointer into an indexable typedef
	BP_JSP_ERR_CODES * testCodes = (P_BP_JSP_ERR_CODES) inCodes;


	for(i = 0; i < numCodes; i++){

		// increase the size of the return set
		retSet = (BP_FMT_ERR_TESTS *) bprealloc(retSet, ((i+1) * sizeof(BP_FMT_ERR_TESTS)) + sizeof(BP_FMT_ERR_TESTS));

		// generate match set from a string
		genSet = BP_GenerateMatchSetFromTestString(testCodes[i].description, bpstrlen(testCodes[i].description), fmtReplacementTable);
		if(!genSet)
			return NULL;

		// copy in the array data
		memcpy(&retSet[i], genSet, sizeof(BP_FMT_ERR_TESTS));

		// zero out trailing item
		memset(&retSet[i+1], 0x00, sizeof(BP_FMT_ERR_TESTS));

		// destroy chunk structure (dont destroy internal pointers)
		bpfree(genSet);
		genSet = NULL;

	}

	// return the filled out structure
	return (P_BP_FMT_ERR_TESTS) retSet;
}

// Returns the total number of checks within the msql array.
size_t BP_JSPErrCount(){

	size_t retCount = sizeof(jspErrCodes) / sizeof(BP_JSP_ERR_CODES);
	return retCount;
}


// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// %%%%%%%%%%%% DECONSTRUCTORS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

// Destroys a set of JSP error code allocations
size_t BP_DestroyJSPErrCodes(BP_JSP_ERR_CODES * codes){

	if(!codes)
		return ERR_FAILURE;

	size_t x = 0;
	for(x = 0; x < BP_JSPErrCount(); x++){
		bpfree(codes[x].description);
	}

	// NO MORE FREE CODE, NO MORE, NONE lol (memory 4free tho | bovice)
	bpfree(codes);

	// return success
	return ERR_SUCCESS;
}
