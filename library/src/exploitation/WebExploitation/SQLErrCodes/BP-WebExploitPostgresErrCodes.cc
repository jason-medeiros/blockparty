/*
 * BP-WebExploitPostgresErrCodes.cc
 *
 *  Created on: Apr 2, 2009
 *      Author: root
 */

#include "../../../../include/BP-Main.h"

BP_POSTGRES_ERR_CODES postgresErrCodes[] = {
	{(char*)"ERRCODE_SQL_STATEMENT_NOT_YET_COMPLETE", (char*)"sql_statement_not_yet_complete"},
	{(char*)"ERRCODE_CONNECTION_EXCEPTION", (char*)"connection_exception"},
	{(char*)"ERRCODE_CONNECTION_DOES_NOT_EXIST", (char*)"connection_does_not_exist"},
	{(char*)"ERRCODE_CONNECTION_FAILURE", (char*)"connection_failure"},
	{(char*)"ERRCODE_SQLCLIENT_UNABLE_TO_ESTABLISH_SQLCONNECTION", (char*)"sqlclient_unable_to_establish_sqlconnection"},
	{(char*)"ERRCODE_SQLSERVER_REJECTED_ESTABLISHMENT_OF_SQLCONNECTION", (char*)"sqlserver_rejected_establishment_of_sqlconnection"},
	{(char*)"ERRCODE_TRANSACTION_RESOLUTION_UNKNOWN", (char*)"transaction_resolution_unknown"},
	{(char*)"ERRCODE_PROTOCOL_VIOLATION", (char*)"protocol_violation"},
	{(char*)"ERRCODE_TRIGGERED_ACTION_EXCEPTION", (char*)"triggered_action_exception"},
	{(char*)"ERRCODE_FEATURE_NOT_SUPPORTED", (char*)"feature_not_supported"},
	{(char*)"ERRCODE_INVALID_TRANSACTION_INITIATION", (char*)"invalid_transaction_initiation"},
	{(char*)"ERRCODE_LOCATOR_EXCEPTION", (char*)"locator_exception"},
	{(char*)"ERRCODE_L_E_INVALID_SPECIFICATION", (char*)"invalid_locator_specification"},
	{(char*)"ERRCODE_INVALID_GRANTOR", (char*)"invalid_grantor"},
	{(char*)"ERRCODE_INVALID_GRANT_OPERATION", (char*)"invalid_grant_operation"},
	{(char*)"ERRCODE_INVALID_ROLE_SPECIFICATION", (char*)"invalid_role_specification"},
	{(char*)"ERRCODE_CARDINALITY_VIOLATION", (char*)"cardinality_violation"},
	{(char*)"ERRCODE_DATA_EXCEPTION", (char*)"data_exception"},
	{(char*)"ERRCODE_ARRAY_ELEMENT_ERROR", (char*)"array_element_error"},
	{(char*)"ERRCODE_ARRAY_SUBSCRIPT_ERROR", (char*)"array_subscript_error"},
	{(char*)"ERRCODE_CHARACTER_NOT_IN_REPERTOIRE", (char*)"character_not_in_repertoire"},
	{(char*)"ERRCODE_DATETIME_FIELD_OVERFLOW", (char*)"datetime_field_overflow"},
	{(char*)"ERRCODE_DATETIME_VALUE_OUT_OF_RANGE", (char*)"datetime_value_out_of_range"},
	{(char*)"ERRCODE_DIVISION_BY_ZERO", (char*)"division_by_zero"},
	{(char*)"ERRCODE_ERROR_IN_ASSIGNMENT", (char*)"error_in_assignment"},
	{(char*)"ERRCODE_ESCAPE_CHARACTER_CONFLICT", (char*)"escape_character_conflict"},
	{(char*)"ERRCODE_INDICATOR_OVERFLOW", (char*)"indicator_overflow"},
	{(char*)"ERRCODE_INTERVAL_FIELD_OVERFLOW", (char*)"interval_field_overflow"},
	{(char*)"ERRCODE_INVALID_ARGUMENT_FOR_LOG", (char*)"invalid_argument_for_logarithm"},
	{(char*)"ERRCODE_INVALID_ARGUMENT_FOR_POWER_FUNCTION", (char*)"invalid_argument_for_power_function"},
	{(char*)"ERRCODE_INVALID_ARGUMENT_FOR_WIDTH_BUCKET_FUNCTION", (char*)"invalid_argument_for_width_bucket_function"},
	{(char*)"ERRCODE_INVALID_CHARACTER_VALUE_FOR_CAST", (char*)"invalid_character_value_for_cast"},
	{(char*)"ERRCODE_INVALID_DATETIME_FORMAT", (char*)"invalid_datetime_format"},
	{(char*)"ERRCODE_INVALID_ESCAPE_CHARACTER", (char*)"invalid_escape_character"},
	{(char*)"ERRCODE_INVALID_ESCAPE_OCTET", (char*)"invalid_escape_octet"},
	{(char*)"ERRCODE_INVALID_ESCAPE_SEQUENCE", (char*)"invalid_escape_sequence"},
	{(char*)"ERRCODE_INVALID_INDICATOR_PARAMETER_VALUE", (char*)"invalid_indicator_parameter_value"},
	{(char*)"ERRCODE_INVALID_LIMIT_VALUE", (char*)"invalid_limit_value"},
	{(char*)"ERRCODE_INVALID_PARAMETER_VALUE", (char*)"invalid_parameter_value"},
	{(char*)"ERRCODE_INVALID_REGULAR_EXPRESSION", (char*)"invalid_regular_expression"},
	{(char*)"ERRCODE_INVALID_TIME_ZONE_DISPLACEMENT_VALUE", (char*)"invalid_time_zone_displacement_value"},
	{(char*)"ERRCODE_INVALID_USE_OF_ESCAPE_CHARACTER", (char*)"invalid_use_of_escape_character"},
	{(char*)"ERRCODE_MOST_SPECIFIC_TYPE_MISMATCH", (char*)"most_specific_type_mismatch"},
	{(char*)"ERRCODE_NULL_VALUE_NOT_ALLOWED", (char*)"null_value_not_allowed"},
	{(char*)"ERRCODE_NULL_VALUE_NO_INDICATOR_PARAMETER", (char*)"null_value_no_indicator_parameter"},
	{(char*)"ERRCODE_NUMERIC_VALUE_OUT_OF_RANGE", (char*)"numeric_value_out_of_range"},
	{(char*)"ERRCODE_STRING_DATA_LENGTH_MISMATCH", (char*)"string_data_length_mismatch"},
	{(char*)"ERRCODE_STRING_DATA_RIGHT_TRUNCATION", (char*)"string_data_right_truncation"},
	{(char*)"ERRCODE_SUBSTRING_ERROR", (char*)"substring_error"},
	{(char*)"ERRCODE_TRIM_ERROR", (char*)"trim_error"},
	{(char*)"ERRCODE_UNTERMINATED_C_STRING", (char*)"unterminated_c_string"},
	{(char*)"ERRCODE_ZERO_LENGTH_CHARACTER_STRING", (char*)"zero_length_character_string"},
	{(char*)"ERRCODE_FLOATING_POINT_EXCEPTION", (char*)"floating_point_exception"},
	{(char*)"ERRCODE_INVALID_TEXT_REPRESENTATION", (char*)"invalid_text_representation"},
	{(char*)"ERRCODE_INVALID_BINARY_REPRESENTATION", (char*)"invalid_binary_representation"},
	{(char*)"ERRCODE_BAD_COPY_FILE_FORMAT", (char*)"bad_copy_file_format"},
	{(char*)"ERRCODE_UNTRANSLATABLE_CHARACTER", (char*)"untranslatable_character"},
	{(char*)"ERRCODE_NOT_AN_XML_DOCUMENT", (char*)"not_an_xml_document"},
	{(char*)"ERRCODE_INVALID_XML_DOCUMENT", (char*)"invalid_xml_document"},
	{(char*)"ERRCODE_INVALID_XML_CONTENT", (char*)"invalid_xml_content"},
	{(char*)"ERRCODE_INVALID_XML_COMMENT", (char*)"invalid_xml_comment"},
	{(char*)"ERRCODE_INVALID_XML_PROCESSING_INSTRUCTION", (char*)"invalid_xml_processing_instruction"},
	{(char*)"ERRCODE_INTEGRITY_CONSTRAINT_VIOLATION", (char*)"integrity_constraint_violation"},
	{(char*)"ERRCODE_RESTRICT_VIOLATION", (char*)"restrict_violation"},
	{(char*)"ERRCODE_NOT_NULL_VIOLATION", (char*)"not_null_violation"},
	{(char*)"ERRCODE_FOREIGN_KEY_VIOLATION", (char*)"foreign_key_violation"},
	{(char*)"ERRCODE_UNIQUE_VIOLATION", (char*)"unique_violation"},
	{(char*)"ERRCODE_CHECK_VIOLATION", (char*)"check_violation"},
	{(char*)"ERRCODE_INVALID_CURSOR_STATE", (char*)"invalid_cursor_state"},
	{(char*)"ERRCODE_INVALID_TRANSACTION_STATE", (char*)"invalid_transaction_state"},
	{(char*)"ERRCODE_ACTIVE_SQL_TRANSACTION", (char*)"active_sql_transaction"},
	{(char*)"ERRCODE_BRANCH_TRANSACTION_ALREADY_ACTIVE", (char*)"branch_transaction_already_active"},
	{(char*)"ERRCODE_HELD_CURSOR_REQUIRES_SAME_ISOLATION_LEVEL", (char*)"held_cursor_requires_same_isolation_level"},
	{(char*)"ERRCODE_INAPPROPRIATE_ACCESS_MODE_FOR_BRANCH_TRANSACTION", (char*)"inappropriate_access_mode_for_branch_transaction"},
	{(char*)"ERRCODE_INAPPROPRIATE_ISOLATION_LEVEL_FOR_BRANCH_TRANSACTION", (char*)"inappropriate_isolation_level_for_branch_transaction"},
	{(char*)"ERRCODE_NO_ACTIVE_SQL_TRANSACTION_FOR_BRANCH_TRANSACTION", (char*)"no_active_sql_transaction_for_branch_transaction"},
	{(char*)"ERRCODE_READ_ONLY_SQL_TRANSACTION", (char*)"read_only_sql_transaction"},
	{(char*)"ERRCODE_SCHEMA_AND_DATA_STATEMENT_MIXING_NOT_SUPPORTED", (char*)"schema_and_data_statement_mixing_not_supported"},
	{(char*)"ERRCODE_NO_ACTIVE_SQL_TRANSACTION", (char*)"no_active_sql_transaction"},
	{(char*)"ERRCODE_IN_FAILED_SQL_TRANSACTION", (char*)"in_failed_sql_transaction"},
	{(char*)"ERRCODE_INVALID_SQL_STATEMENT_NAME", (char*)"invalid_sql_statement_name"},
	{(char*)"ERRCODE_TRIGGERED_DATA_CHANGE_VIOLATION", (char*)"triggered_data_change_violation"},
	{(char*)"ERRCODE_INVALID_AUTHORIZATION_SPECIFICATION", (char*)"invalid_authorization_specification"},
	{(char*)"ERRCODE_DEPENDENT_PRIVILEGE_DESCRIPTORS_STILL_EXIST", (char*)"dependent_privilege_descriptors_still_exist"},
	{(char*)"ERRCODE_DEPENDENT_OBJECTS_STILL_EXIST", (char*)"dependent_objects_still_exist"},
	{(char*)"ERRCODE_INVALID_TRANSACTION_TERMINATION", (char*)"invalid_transaction_termination"},
	{(char*)"ERRCODE_SQL_ROUTINE_EXCEPTION", (char*)"sql_routine_exception"},
	{(char*)"ERRCODE_S_R_E_FUNCTION_EXECUTED_NO_RETURN_STATEMENT", (char*)"function_executed_no_return_statement"},
	{(char*)"ERRCODE_S_R_E_MODIFYING_SQL_DATA_NOT_PERMITTED", (char*)"modifying_sql_data_not_permitted"},
	{(char*)"ERRCODE_S_R_E_PROHIBITED_SQL_STATEMENT_ATTEMPTED", (char*)"prohibited_sql_statement_attempted"},
	{(char*)"ERRCODE_S_R_E_READING_SQL_DATA_NOT_PERMITTED", (char*)"reading_sql_data_not_permitted"},
	{(char*)"ERRCODE_INVALID_CURSOR_NAME", (char*)"invalid_cursor_name"},
	{(char*)"ERRCODE_EXTERNAL_ROUTINE_EXCEPTION", (char*)"external_routine_exception"},
	{(char*)"ERRCODE_E_R_E_CONTAINING_SQL_NOT_PERMITTED", (char*)"containing_sql_not_permitted"},
	{(char*)"ERRCODE_E_R_E_MODIFYING_SQL_DATA_NOT_PERMITTED", (char*)"modifying_sql_data_not_permitted"},
	{(char*)"ERRCODE_E_R_E_PROHIBITED_SQL_STATEMENT_ATTEMPTED", (char*)"prohibited_sql_statement_attempted"},
	{(char*)"ERRCODE_E_R_E_READING_SQL_DATA_NOT_PERMITTED", (char*)"reading_sql_data_not_permitted"},
	{(char*)"ERRCODE_EXTERNAL_ROUTINE_INVOCATION_EXCEPTION", (char*)"external_routine_invocation_exception"},
	{(char*)"ERRCODE_E_R_I_E_INVALID_SQLSTATE_RETURNED", (char*)"invalid_sqlstate_returned"},
	{(char*)"ERRCODE_E_R_I_E_NULL_VALUE_NOT_ALLOWED", (char*)"null_value_not_allowed"},
	{(char*)"ERRCODE_E_R_I_E_TRIGGER_PROTOCOL_VIOLATED", (char*)"trigger_protocol_violated"},
	{(char*)"ERRCODE_E_R_I_E_SRF_PROTOCOL_VIOLATED", (char*)"srf_protocol_violated"},
	{(char*)"ERRCODE_SAVEPOINT_EXCEPTION", (char*)"savepoint_exception"},
	{(char*)"ERRCODE_S_E_INVALID_SPECIFICATION", (char*)"invalid_savepoint_specification"},
	{(char*)"ERRCODE_INVALID_CATALOG_NAME", (char*)"invalid_catalog_name"},
	{(char*)"ERRCODE_INVALID_SCHEMA_NAME", (char*)"invalid_schema_name"},
	{(char*)"ERRCODE_TRANSACTION_ROLLBACK", (char*)"transaction_rollback"},
	{(char*)"ERRCODE_T_R_INTEGRITY_CONSTRAINT_VIOLATION", (char*)"transaction_integrity_constraint_violation"},
	{(char*)"ERRCODE_T_R_SERIALIZATION_FAILURE", (char*)"serialization_failure"},
	{(char*)"ERRCODE_T_R_STATEMENT_COMPLETION_UNKNOWN", (char*)"statement_completion_unknown"},
	{(char*)"ERRCODE_T_R_DEADLOCK_DETECTED", (char*)"deadlock_detected"},
	{(char*)"ERRCODE_SYNTAX_ERROR_OR_ACCESS_RULE_VIOLATION", (char*)"syntax_error_or_access_rule_violation"},
	{(char*)"ERRCODE_SYNTAX_ERROR", (char*)"syntax_error"},
	{(char*)"ERRCODE_INSUFFICIENT_PRIVILEGE", (char*)"insufficient_privilege"},
	{(char*)"ERRCODE_CANNOT_COERCE", (char*)"cannot_coerce"},
	{(char*)"ERRCODE_GROUPING_ERROR", (char*)"grouping_error"},
	{(char*)"ERRCODE_INVALID_FOREIGN_KEY", (char*)"invalid_foreign_key"},
	{(char*)"ERRCODE_INVALID_NAME", (char*)"invalid_name"},
	{(char*)"ERRCODE_NAME_TOO_LONG", (char*)"name_too_long"},
	{(char*)"ERRCODE_RESERVED_NAME", (char*)"reserved_name"},
	{(char*)"ERRCODE_DATATYPE_MISMATCH", (char*)"datatype_mismatch"},
	{(char*)"ERRCODE_INDETERMINATE_DATATYPE", (char*)"indeterminate_datatype"},
	{(char*)"ERRCODE_WRONG_OBJECT_TYPE", (char*)"wrong_object_type"},
	{(char*)"ERRCODE_UNDEFINED_COLUMN", (char*)"undefined_column"},
	{(char*)"ERRCODE_UNDEFINED_CURSOR", (char*)"undefined_cursor"},
	{(char*)"ERRCODE_UNDEFINED_DATABASE", (char*)"undefined_database"},
	{(char*)"ERRCODE_UNDEFINED_FUNCTION", (char*)"undefined_function"},
	{(char*)"ERRCODE_UNDEFINED_PSTATEMENT", (char*)"undefined_pstatement"},
	{(char*)"ERRCODE_UNDEFINED_SCHEMA", (char*)"undefined_schema"},
	{(char*)"ERRCODE_UNDEFINED_TABLE", (char*)"undefined_table"},
	{(char*)"ERRCODE_UNDEFINED_PARAMETER", (char*)"undefined_parameter"},
	{(char*)"ERRCODE_UNDEFINED_OBJECT", (char*)"undefined_object"},
	{(char*)"ERRCODE_DUPLICATE_COLUMN", (char*)"duplicate_column"},
	{(char*)"ERRCODE_DUPLICATE_CURSOR", (char*)"duplicate_cursor"},
	{(char*)"ERRCODE_DUPLICATE_DATABASE", (char*)"duplicate_database"},
	{(char*)"ERRCODE_DUPLICATE_FUNCTION", (char*)"duplicate_function"},
	{(char*)"ERRCODE_DUPLICATE_PSTATEMENT", (char*)"duplicate_prepared_statement"},
	{(char*)"ERRCODE_DUPLICATE_SCHEMA", (char*)"duplicate_schema"},
	{(char*)"ERRCODE_DUPLICATE_TABLE", (char*)"duplicate_table"},
	{(char*)"ERRCODE_DUPLICATE_ALIAS", (char*)"duplicate_alias"},
	{(char*)"ERRCODE_DUPLICATE_OBJECT", (char*)"duplicate_object"},
	{(char*)"ERRCODE_AMBIGUOUS_COLUMN", (char*)"ambiguous_column"},
	{(char*)"ERRCODE_AMBIGUOUS_FUNCTION", (char*)"ambiguous_function"},
	{(char*)"ERRCODE_AMBIGUOUS_PARAMETER", (char*)"ambiguous_parameter"},
	{(char*)"ERRCODE_AMBIGUOUS_ALIAS", (char*)"ambiguous_alias"},
	{(char*)"ERRCODE_INVALID_COLUMN_REFERENCE", (char*)"invalid_column_reference"},
	{(char*)"ERRCODE_INVALID_COLUMN_DEFINITION", (char*)"invalid_column_definition"},
	{(char*)"ERRCODE_INVALID_CURSOR_DEFINITION", (char*)"invalid_cursor_definition"},
	{(char*)"ERRCODE_INVALID_DATABASE_DEFINITION", (char*)"invalid_database_definition"},
	{(char*)"ERRCODE_INVALID_FUNCTION_DEFINITION", (char*)"invalid_function_definition"},
	{(char*)"ERRCODE_INVALID_PSTATEMENT_DEFINITION", (char*)"invalid_prepared_statement_definition"},
	{(char*)"ERRCODE_INVALID_SCHEMA_DEFINITION", (char*)"invalid_schema_definition"},
	{(char*)"ERRCODE_INVALID_TABLE_DEFINITION", (char*)"invalid_table_definition"},
	{(char*)"ERRCODE_INVALID_OBJECT_DEFINITION", (char*)"invalid_object_definition"},
	{(char*)"ERRCODE_WITH_CHECK_OPTION_VIOLATION", (char*)"with_check_option_violation"},
	{(char*)"ERRCODE_INSUFFICIENT_RESOURCES", (char*)"insufficient_resources"},
	{(char*)"ERRCODE_DISK_FULL", (char*)"disk_full"},
	{(char*)"ERRCODE_OUT_OF_MEMORY", (char*)"out_of_memory"},
	{(char*)"ERRCODE_TOO_MANY_CONNECTIONS", (char*)"too_many_connections"},
	{(char*)"ERRCODE_PROGRAM_LIMIT_EXCEEDED", (char*)"program_limit_exceeded"},
	{(char*)"ERRCODE_STATEMENT_TOO_COMPLEX", (char*)"statement_too_complex"},
	{(char*)"ERRCODE_TOO_MANY_COLUMNS", (char*)"too_many_columns"},
	{(char*)"ERRCODE_TOO_MANY_ARGUMENTS", (char*)"too_many_arguments"},
	{(char*)"ERRCODE_OBJECT_NOT_IN_PREREQUISITE_STATE", (char*)"object_not_in_prerequisite_state"},
	{(char*)"ERRCODE_OBJECT_IN_USE", (char*)"object_in_use"},
	{(char*)"ERRCODE_CANT_CHANGE_RUNTIME_PARAM", (char*)"cant_change_runtime_param"},
	{(char*)"ERRCODE_LOCK_NOT_AVAILABLE", (char*)"lock_not_available"},
	{(char*)"ERRCODE_OPERATOR_INTERVENTION", (char*)"operator_intervention"},
	{(char*)"ERRCODE_QUERY_CANCELED", (char*)"query_canceled"},
	{(char*)"ERRCODE_ADMIN_SHUTDOWN", (char*)"admin_shutdown"},
	{(char*)"ERRCODE_CRASH_SHUTDOWN", (char*)"crash_shutdown"},
	{(char*)"ERRCODE_CANNOT_CONNECT_NOW", (char*)"cannot_connect_now"},
	{(char*)"ERRCODE_IO_ERROR", (char*)"io_error"},
	{(char*)"ERRCODE_UNDEFINED_FILE", (char*)"undefined_file"},
	{(char*)"ERRCODE_DUPLICATE_FILE", (char*)"duplicate_file"},
	{(char*)"ERRCODE_CONFIG_FILE_ERROR", (char*)"config_file_error"},
	{(char*)"ERRCODE_LOCK_FILE_EXISTS", (char*)"lock_file_exists"},
	{(char*)"ERRCODE_PLPGSQL_ERROR", (char*)"plpgsql_error"},
	{(char*)"ERRCODE_RAISE_EXCEPTION", (char*)"raise_exception"},
	{(char*)"ERRCODE_NO_DATA_FOUND", (char*)"no_data_found"},
	{(char*)"ERRCODE_TOO_MANY_ROWS", (char*)"too_many_rows"},
	{(char*)"ERRCODE_INTERNAL_ERROR", (char*)"internal_error"},
	{(char*)"ERRCODE_DATA_CORRUPTED", (char*)"data_corrupted"},
	{(char*)"ERRCODE_INDEX_CORRUPTED", (char*)"index_corrupted"}
};


// Generates a newly allocated error code array
P_BP_POSTGRES_ERR_CODES BP_PostgresGenErrCodeArray(){

	P_BP_POSTGRES_ERR_CODES retTable = (P_BP_POSTGRES_ERR_CODES) bpcalloc(sizeof(postgresErrCodes), 1);
	if(!retTable)
		return NULL;


	BP_POSTGRES_ERR_CODES nullCmp;
	memset(&nullCmp, 0x00, sizeof(nullCmp));

	// duplicate the array
	size_t x = 0;
	for(x = 0; ( sizeof(BP_POSTGRES_ERR_CODES) * x ) < sizeof(postgresErrCodes); x++){

		// duplicate string in table
		retTable[x].postgresErrCode = bpstrdup(postgresErrCodes[x].postgresErrCode);
		retTable[x].postgresErrStr = bpstrdup(postgresErrCodes[x].postgresErrStr);

	}

	return retTable;
}



// Generates a list of error code tests based around the
// error code array defined above.  This set is basically
// a string array w/o format strings.
P_BP_FMT_ERR_TESTS BP_PostgresGenErrTestsFromErrCodeArray(P_BP_POSTGRES_ERR_CODES inCodes, size_t numCodes, char **fmtReplacementTable){

	if(!inCodes)
		return NULL;

	size_t i = 0;
	P_BP_FMT_ERR_TESTS genSet = NULL;
	BP_FMT_ERR_TESTS * retSet = NULL;

	// set code array pointer into an indexable typedef
	BP_POSTGRES_ERR_CODES * testCodes = (P_BP_POSTGRES_ERR_CODES) inCodes;


	for(i = 0; i < numCodes; i++)
	{

		// increase the size of the return set
		retSet = (BP_FMT_ERR_TESTS *) bprealloc(retSet, ((i+1) * sizeof(BP_FMT_ERR_TESTS)) + sizeof(BP_FMT_ERR_TESTS));

		// generate match set from a string
		genSet = BP_GenerateMatchSetFromTestString(testCodes[i].postgresErrStr, bpstrlen(testCodes[i].postgresErrStr), fmtReplacementTable);
		if(!genSet)
			return NULL;

		// copy in the array data
		memcpy(&retSet[i], genSet, sizeof(BP_FMT_ERR_TESTS));

		// zero out trailing item
		memset(&retSet[i+1], 0x00, sizeof(BP_FMT_ERR_TESTS));

		// destroy chunk structure (dont destroy internal pointers)
		bpfree(genSet);
		genSet = NULL;

	}

	// return the filled out structure
	return (P_BP_FMT_ERR_TESTS) retSet;
}

// Returns the full count of tests to perform
size_t BP_PostgresErrCount(){

	return sizeof(postgresErrCodes) / sizeof(BP_POSTGRES_ERR_CODES);
}



// %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// %%%%%%%%%%%% DECONSTRUCTORS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

// Destroys a set of ASP error code allocations
size_t BP_DestroyPostgresErrCodes(BP_POSTGRES_ERR_CODES * codes){

	if(!codes)
		return ERR_FAILURE;

	size_t x = 0;
	for(x = 0; x < BP_PostgresErrCount(); x++){
		bpfree(codes[x].postgresErrCode);
		bpfree(codes[x].postgresErrStr);
	}

	// NO MORE FREE CODE, NO MORE, NONE lol (memory 4free tho | bovice)
	bpfree(codes);

	// return success
	return ERR_SUCCESS;
}




